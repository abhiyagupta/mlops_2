
services:
  base:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./checkpoints:/app/checkpoints
      - ./input:/app/input
      - ./output:/app/output
      
    environment:
      - PYTHONPATH=/app
    working_dir: /app

  train:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PYTHONPATH=/app
    working_dir: /app
    command: ["python", "train.py"]
    depends_on:
      - base

  eval:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./checkpoints:/app/checkpoints
    environment:
      - PYTHONPATH=/app
    working_dir: /app
    command: ["python", "eval.py"]
    depends_on:
      - train

  infer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./checkpoints:/app/checkpoints
      - ./input:/app/input
      - ./output:/app/output
    environment:
      - PYTHONPATH=/app
    working_dir: /app
    command: ["python", "infer.py"]
    depends_on:
      - eval

  tensorboard:
    image: tensorflow/tensorflow:latest
    volumes:
      - ./logs:/logs
    ports:
      - "6006:6006"
    command: tensorboard --logdir /logs --host 0.0.0.0

#   jupyter:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     # volumes:
#     #   - mnist:/app
#     environment:
#       - PYTHONPATH=/app
#     working_dir: /app
#     ports:
#       - "8888:8888"
#     command: jupyter notebook --ip 0.0.0.0 --no-browser --allow-root
#     depends_on:
#       - base

# # volumes:
# #   mnist:
